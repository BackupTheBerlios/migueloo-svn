<?php
/*
      +----------------------------------------------------------------------+
      | miguel base                                                          |
      +----------------------------------------------------------------------+
      | Copyright (c) 2004, miguel Development Team                          |
      +----------------------------------------------------------------------+
      |   This program is free software; you can redistribute it and/or      |
      |   modify it under the terms of the GNU General Public License        |
      |   as published by the Free Software Foundation; either version 2     |
      |   of the License, or (at your option) any later version.             |
      |                                                                      |
      |   This program is distributed in the hope that it will be useful,    |
      |   but WITHOUT ANY WARRANTY; without even the implied warranty of     |
      |   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      |
      |   GNU General Public License for more details.                       |
      |                                                                      |
      |   You should have received a copy of the GNU General Public License  |
      |   along with this program; if not, write to the Free Software        |
      |   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA          |
      |   02111-1307, USA. The GNU GPL license is also available through     |
      |   the world-wide-web at http://www.gnu.org/copyleft/gpl.html         |
      +----------------------------------------------------------------------+
      | Authors: Jesus A. Martinez Cerezal <jamarcer@inicia.es>              |
      |          miguel Development Team                                     |
      |                       <e-learning-desarrollo@listas.hispalinux.es>   |      
      +----------------------------------------------------------------------+
*/
/**
 * Define la clase base de miguel.
 *
 * @author Jesus A. Martinez Cerezal <jamarcer@inicia.es>
 * @author miguel development team <e-learning-desarrollo@listas.hispalinux.es>     
 * @package miguel base
 * @subpackage control
 * @version 1.0.0
 *
 */ 
/**
 * Include libraries
 */


class miguel_CCourseViewer extends miguel_Controller
{
	/**
	 * This is the constructor.
	 *
	 */
	function miguel_CCourseViewer()
	{	
		$this->miguel_Controller();
		$this->setModuleName('courseViewer');
		$this->setModelClass('miguel_MCourseViewer');
		$this->setViewClass('miguel_VCourseViewer');
		$this->setCacheFlag(false);
	}
     
	function processPetition() 
	{
		$arr_cvw = $this->getSessionData();
		//Debug::oneVar($arr_cvw, __FILE__,__LINE__);

		//Obtención del id de curso
		//Parametro temporal para demo
		$course_id = $this->getViewVariable('id');
		if (!isset($course_id)) {
			if (!isset($arr_cvw['course_id'])) {
				$course_id = 8;
			} else {
				$course_id = $arr_cvw['course_id'];
			}
		} else {
			$arr_cvw = array();
		}
		
		//En un futuro deberia ser lo siguiente
		//$course_id = Session::getValue('course_id');
		if($course_id != $arr_cvw['course_id']){
			unset($arr_cvw);
			$arr_cvw['course_id'] = $course_id;
		}
		

		//Si el curso se inicializa correctamente...
		if ( isset($course_id) && $course_id != '' ) {       
			include_once( Util::app_Path('common/control/classes/miguel_courseinfo.class.php') );
			$infoCourse = miguel_CourseInfo::getInfo($this->obj_data, $course_id);
			//Debug::oneVar($infoCourse, __FILE__,__LINE__);
			//$this->setViewVariable('infoCourse', $infoCourse);
			//$arr_cvw['module_path'] = $this->obj_data->CourseModules($course_id);

			//Se obtiene el orden de documentos
			$arr_cvw['module_path'] = $this->obj_data->CourseModulesOrder($course_id);
			Debug::oneVar($arr_cvw['module_path'], __FILE__, __LINE__);
			Debug::oneVar($arr_cvw, __FILE__, __LINE__);
			

			if(!isset($arr_cvw['nav_force'])){
				$module_id = $this->getViewVariable('mid');
				if (!isset($module_id)) {
					$module_id = $arr_cvw['module_id'];
					if (!isset($module_id)) {	
						$arr_cvw['module_id'] = key($arr_cvw['module_path']);
						$module_id = $arr_cvw['module_id'];
					}
				} else {
					$arr_cvw['module_id'] = $module_id;
				}     
				//Debug::oneVar($arr_cvw, __FILE__,__LINE__);
			
				
				$document_id = $arr_cvw['document_id'];
				if (!isset($document_id)) {
					$document_id = intval($this->obj_data->firstDocument($module_id));
					$arr_cvw['document_id'] = $document_id;
				}
			} else {
				if(!isset($arr_cvw['nav_force_module'])){
					//Debug::oneVar($arr_cvw['nav_force_module'], __FILE__, __LINE__);
					$arr_cvw['nav_force_module'] = $arr_cvw['module_id'];
					$arr_cvw['nav_force_document'] = $arr_cvw['document_id'];
				}
				
				if($arr_cvw['nav_id'] >= count($arr_cvw['nav_force'])){
					$arr_cvw['module_id'] = $arr_cvw['nav_force_module'];
					$arr_cvw['document_id'] = $arr_cvw['nav_force_document'] ;
				} else {
					$arr_cvw['module_id'] = $arr_cvw['nav_force'][$arr_cvw['nav_id']];
					$module_id = $arr_cvw['module_id'];
					$document_id = intval($this->obj_data->firstDocument($module_id));
					$arr_cvw['document_id'] = $document_id;
					$arr_cvw['nav_id']++;
				}
				
				if($arr_cvw['nav_id'] >= count($arr_cvw['nav_force'])){
					unset($arr_cvw['nav_id']);
					unset($arr_cvw['nav_force']);
					unset($arr_cvw['nav_force_module']);
					unset($arr_cvw['nav_force_document']);
				}
			}
			
			//Debug::oneVar($arr_cvw, __FILE__,__LINE__);
			$is_inicio = false;
			//Tratamiento de navegacion: 1ra vez
			$option = $this->getViewVariable('opt');
			if (!isset($option)) {
				$folder_id = $this->obj_data->getFolderId($document_id);
				$arr_path = $this->getFolderNavInfo($folder_id, $arr_cvw);
				//Debug::oneVar($arr_path, __FILE__,__LINE__);
				//Debug::oneVar($arr_cvw, __FILE__,__LINE__);
				
				$dc_inicio = $arr_cvw['inicio'];
				$is_inicio = false;
				if (!isset($dc_inicio)) {
					//$dc_inicio = $arr_path['fl_actual'];
					$is_inicio = true;
					$arr_cvw['inicio'] = $folder_id;
					$arr_cvw['module_init'] = $module_id;
				}
				
				//Procesar datos de formulario
				if($arr_cvw['accion']){
					//Procesamos el formulario, si existe
					$this->processForm($arr_cvw['document_id'], $arr_cvw);

					//Sólo si no hay que mostrar un resultado se sigue
					if (!isset($arr_cvw['result'])){
						//Procesamos la navegacion
						$this->processNavigation('next', $arr_path, $arr_cvw, $is_inicio);
					}
				}
			} else {
				$this->processNavigation($option, $arr_path, $arr_cvw, $is_inicio);
			}
			//tratamento de acciones
			//Debug::oneVar($arr_path, __FILE__, __LINE__);
			if($arr_path['fl_type']){
				$this->setViewVariable('view_elem', $this->processNextForm($arr_cvw));
				$this->setViewClass('miguel_VCourseActioner');
				$arr_cvw['accion'] = true;
			} else {
				$this->setViewClass('miguel_VCourseViewer');
				$arr_cvw['accion'] = false;
			}
			//Debug::oneVar($arr_cvw, __FILE__,__LINE__);
			//Mandamos datos a vista
			$this->setViewVariable('ban_mid', $this->obj_data->getCourseModulesPosition($arr_cvw['course_id'],$arr_cvw['module_id']));
			$this->setViewVariable('inicio', $is_inicio);
			$this->setViewVariable('previo', $arr_cvw['previo']);
			$this->setViewVariable('siguiente', $arr_cvw['siguiente']);
			$this->setViewVariable('actual', Util::formatPath(MIGUEL_APPDIR.'var/courses/course_'.$course_id.'/pages/'.$arr_path['fl_actual'])); //Util::formatPath(MIGUEL_APPDIR.'var/courses/'.$file);
			$this->setViewVariable('path', 'var/courses/course_'.$course_id.'/pages/');
			//Guardamos variables de navegacion
			$this->setSessionElement('cvw', $arr_cvw);
			
			$this->addNavElement(Util::format_URLPath("courseViewer/index.php",  'url='.$this->getViewVariable('url').'&name='.$this->getViewVariable('name')), 
									$infoCourse['description']);
			
			$this->setPageTitle("miguel Course Viewer Page ");
			$this->setMessage('');
			//$this->setCacheFile("miguel_vParser");
			$this->setCacheFlag(true);
			$this->setHelp("");
		}
	}
	
	function getSessionData()
	{
		$data = $this->getSessionElement('cvw');
		
		foreach($data as $item => $value){
			$ret_val[$item] = $value;
		}
		
		return $ret_val;
	}
	
	function processNavigation($_option, &$arr_path, &$arr_cvw, &$is_inicio)
	{
		switch ($_option) {
			case 'init':
				$is_inicio = true;
				$folder_id = $arr_cvw['inicio'];
				$arr_cvw['document_id'] = $arr_cvw['inicio'];
				$arr_cvw['module_id'] = $arr_cvw['module_init'];
				$arr_path = $this->getFolderNavInfo($folder_id, $arr_cvw);
				break;
			case 'prev':
				$is_inicio = false;
				$folder_id = $arr_cvw['previo'];
				$arr_cvw['document_id'] = $arr_cvw['previo'];
				//$arr_cvw['module_id'] = $arr_cvw['module_prev'];
				$arr_path = $this->getFolderNavInfo($folder_id, $arr_cvw);
				break;
			case 'next':
				$is_inicio = false;
				$folder_id = $arr_cvw['siguiente'];
				$arr_cvw['document_id'] = $arr_cvw['siguiente'];
				$arr_cvw['module_id'] = $arr_cvw['module_next'];
				$arr_path = $this->getFolderNavInfo($folder_id, $arr_cvw);
				break;
		}
	}
		
	function getFolderNavInfo($_folder_id, &$arr_cvw)
	{
		$arr_path = $this->obj_data->getFolderInfo($_folder_id);
		//Debug::oneVar($arr_path, __FILE__, __LINE__);
		//Debug::oneVar($arr_cvw['module_id'], __FILE__, __LINE__);
		if($arr_path['fl_previo'] == 0){
			//if($arr_cvw['module_id'] != $arr_cvw['module_prev']){
				while(list($key, $val) = each($arr_cvw['module_path'])){
					//Debug::oneVar($val, __FILE__, __LINE__);
					if($val == $arr_cvw['module_id']){
						$module_id = $key;
						break;
					} else {
						$module_id = 0;
					}
				}
			//} else {
			//	$module_id = $arr_cvw['module_prev'];
			//}
			
			//Debug::oneVar($module_id, __FILE__, __LINE__);
			if($module_id != 0){
				if($module_id != $arr_cvw['module_id']){
					$arr_cvw['previo'] = $this->obj_data->lastDocument($module_id);
					$arr_cvw['module_prev'] = $module_id;
				} else {
					$arr_cvw['previo'] = $arr_cvw['document_id'];
				}
			} else {
				$arr_cvw['module_prev'] = 0;
				$arr_cvw['previo'] = 0;
			}
		} else  {
			$arr_cvw['module_prev'] = $arr_cvw['module_id'];
			$arr_cvw['previo'] = $arr_path['fl_previo'];
		}
		
		if($arr_path['fl_siguiente'] == 0){
			$module_id = $arr_cvw['module_path'][$arr_cvw['module_id']];
			//Debug::oneVar($module_id, __FILE__, __LINE__);
			
			if($module_id != 0){
				$arr_cvw['module_next'] = $module_id;
				$arr_cvw['siguiente'] = $this->obj_data->firstDocument($module_id);
			} else {
				$arr_cvw['module_next'] = 0;
				$arr_cvw['siguiente'] = 0;
			}
		} else  {
			$arr_cvw['module_next'] = $arr_cvw['module_id'];
			$arr_cvw['siguiente'] = $arr_path['fl_siguiente'];
		}
		
		//Debug::oneVar($arr_cvw, __FILE__, __LINE__);
		
		return $arr_path;
	}
	
	function processForm($_document_id, &$arr_cvw)
	{	
		$arr_action = null;
		//Obtenemos los pares campo-valor asociados al documento
		$arr_camp = $this->obj_data->getActionValues($_document_id);
		
		//Comprobamos si se recibe uno/alguno
		foreach($arr_camp as $key => $val){
			if($this->issetViewVariable($key)){

				//Si no hay valor asociado o el valor coincide con el asociado...
				if($val=='' || $val == $this->getViewVariable($key)){
					//Obtenemos las acciones asociadas
					$arr_func = $this->obj_data->getAction($_document_id, $key);
					
					//Construimos las acciones como funciones php variables
					for($i=0; $i<count($arr_func); $i++){
						$function = $arr_func[$i]['accion'];
						$arr_action[] = $this->$function($arr_func[$i]['param'], $arr_cvw);
					}
				}
			}
		
		}
		
		//$arr_action = $this->obj_data->getAction($_document_id);
		//$arr_camp = $this->obj_data->getActionValues($_document_id);
		//Debug::oneVar($arr_cvw['nav_force'], __FILE__, __LINE__);
		//Debug::oneVar($arr_action, __FILE__, __LINE__);
		//Debug::oneVar($arr_cvw, __FILE__, __LINE__);
		
		return;
	}
	
	function processNextForm($arr_cvw)
	{
		$arr_Elem = $this->obj_data->getViewDetails($arr_cvw['document_id']);
		
//		if($this->issetViewVariable('submit')){
		if ($arr_cvw['document_id'] == 24) {
			for($i=0; $i < count($arr_Elem); $i++){
				if($this->issetViewVariable($arr_Elem[$i]['name'])){
					$ret_val[] = $arr_Elem[$i];
				}
			}
		}else if ($arr_cvw['document_id'] == 30 || 
					 $arr_cvw['document_id'] == 31 || 
					 $arr_cvw['document_id'] == 32) {
			for($i=0; $i < count($arr_Elem); $i++){
				if($arr_Elem[$i]['variable'] != 'helptext' || $arr_Elem[$i]['name'] == $arr_cvw['result']){
					$ret_val[] = $arr_Elem[$i];
				}
			}
		}else {
			$ret_val = $arr_Elem;
		}
		//Debug::oneVar($arr_Elem, __FILE__, __LINE__);
		//Debug::oneVar($ret_val, __FILE__, __LINE__);
		return $ret_val;
	}
	
	function multiPathSelection($module_id, &$arr_cvw)
	{
		$arr_cvw['nav_force'][] = $module_id;
		if(!isset($arr_cvw['nav_id'])){
			$arr_cvw['nav_id'] = 0;
		}
		return true;
	}

	function sendInfo2Profesor($none, &$arr_cvw)
	{
		$pregunta1 =  $this->getViewVariable('pregunta1');
		$pregunta2 =  $this->getViewVariable('pregunta2');
		$pregunta3 = $this->getViewVariable('pregunta3');

		//Se envía al Profesor con id 8
		$strSubject = 'Info';
		$strBody = 'Pregunta 1: ' . $pregunta1 . '; Pregunta 2: ' . $pregunta2 . '; Pregunta 3: ' . $pregunta3;
		$this->obj_data->sendMessage(array(8), 'Info', $strBody);
	}

    function checkAnswer($answer, &$arr_cvw)
	{
		$answer = $this->arr_form['radiobutton'];

		//Debug::oneVar("Answer: $answer", __FILE__, __LINE__);
		//Analizamos cual es la respuesta correcta según página
		switch($arr_cvw['document_id'])
		{
			case 30: 
			case 32: 
				$correct='helptext3';
				break;
			case 31: 
				$correct='helptext2';
				break;
		}

		if ($arr_cvw['result'] == $correct ) { 		//Ya se ha respondido correctamente
			unset($arr_cvw['result']);
		} else {
			switch ($answer){
				case 0: 
						$arr_cvw['result']='helptext1';
						break;
				case 1: 
						$arr_cvw['result']='helptext2';
						break;
				case 2: 
						$arr_cvw['result']='helptext3';
						break;
				default:
						$arr_cvw['result']='';
						break;
			}
		}
	}
}
?>
<?php
/*
      +----------------------------------------------------------------------+
      | miguel base                                                          |
      +----------------------------------------------------------------------+
      | Copyright (c) 2004, miguel Development Team                          |
      +----------------------------------------------------------------------+
      |   This program is free software; you can redistribute it and/or      |
      |   modify it under the terms of the GNU General Public License        |
      |   as published by the Free Software Foundation; either version 2     |
      |   of the License, or (at your option) any later version.             |
      |                                                                      |
      |   This program is distributed in the hope that it will be useful,    |
      |   but WITHOUT ANY WARRANTY; without even the implied warranty of     |
      |   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      |
      |   GNU General Public License for more details.                       |
      |                                                                      |
      |   You should have received a copy of the GNU General Public License  |
      |   along with this program; if not, write to the Free Software        |
      |   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA          |
      |   02111-1307, USA. The GNU GPL license is also available through     |
      |   the world-wide-web at http://www.gnu.org/copyleft/gpl.html         |
      +----------------------------------------------------------------------+
      | Authors: Jesus A. Martinez Cerezal <jamarcer@inicia.es>              |
      |          miguel Development Team                                     |
      |                       <e-learning-desarrollo@listas.hispalinux.es>   |
      +----------------------------------------------------------------------+
*/
/**
 * 
 *
 * @author  Jesus A. Martinez Cerezal <jamarcer@inicia.es>
 * @author miguel development team <e-learning-desarrollo@listas.hispalinux.es>
 * @package miguel main
 * @version 1.0.0
 */

include_once (Util::app_Path("common/view/classes/miguel_formcontent.class.php"));

class miguel_externalForm extends miguel_FormContent
{
	var $file_path = '';
	
    function form_init_elements() 
    {
		$arrElem = $this->getViewVariable('view_elem');

		if ($arrElem[0]['name']!=null)  { //Si no está vacío
			for ($i=0; $i<count($arrElem); $i++){
				switch($arrElem[$i]['type']) {
					case 1: //Text
						$arrObj[$i] = $this->_formatElem("FEText", 
											$arrElem[$i]['name'], 
											$arrElem[$i]['variable'], 
											FALSE, 
											50);
						$arrObj[$i]->set_attribute('class','titulo03');
						break;
					case 2: //TextArea
						$arrObj[$i] = $this->_formatElem("FETextArea", 
											$arrElem[$i]['name'], 
											$arrElem[$i]['variable'], 
											FALSE, 
											10,
											60,
											'500px',
											'100px');
						break;
					case 3: //ListBox
						//Componer la lista de valores
						$arrIndex=explode (";", $arrElem[$i]['default']);
						/*for ($i=0; $i<count($arrIndex);$i++)
						{
							$arrValues["$arrIndex[$i]"]="$arrIndex[$i]";
						}

						Debug::oneVar($arrValues);
						*/

						$arrOrden['Por fecha']='fecha';
						$arrOrden['Por autor']='autor';
						$arrOrden['Por tema']='tema';

						$arrObj[$i] = $this->_formatElem("FEListBox",  
											$arrElem[$i]['name'], 
											$arrElem[$i]['variable'], 
											FALSE, 
											'100px',
											NULL,
											$arrOrden);
											//$arrValues);
						$arrObj[$i]->set_attribute('class','titulo03');
						break;
					case 4: //CheckBox
						$arrObj[$i] = $this->_formatElem("FECheckBox",  
											$arrElem[$i]['name'], 
											$arrElem[$i]['variable']);
						$arrObj[$i]->set_attribute('class','tex');
						break;
					case 5: //Boton de accion
						$arrObj[$i] = $this->_addButton($arrElem[$i]['name'], $arrElem[$i]['label'], 'botonformula');
						break;
					case 6: //Label
						$arrObj[$i] = $this->_formatElem("FECheckBox",  
											$arrElem[$i]['name'], 
											$arrElem[$i]['variable']);
						$arrObj[$i]->set_attribute('class','tex');
						break;	
				}
			}
		}

		//Añadimos la lista de objetos
		for ($i=0; $i<count($arrObj);$i++) {
			$this->add_element($arrObj[$i]);
		}
		//$this->add_element($this->_addButton('Aceptar', 'botonformula'));
	
        //lets add a hidden form field
        $this->add_hidden_element("orig");
    }

    function form_init_data() 
    {
		$arrElem = $this->getViewVariable('view_elem');
		/*
		if ($arrElem[0]['name']!=null)  { //Si no está vacío
	 		 	for ($i=0; $i<count($arrElem); $i++){
					if ($arrElem[$i]['type'] != 3) { //Las listas tomana los valores en su creación 
						 $this->set_element_value($arrElem[$i]['name'],
							 										$arrElem[$i]['default']);
					} //if
				} //for
		}//if
		*/	
			
		$this->set_hidden_element_value("orig", "external");
		
		return;
    }

    function form() 
    {
		$this->file_path = $this->getViewVariable('path');
		
        $table = &html_table($this->_width,0,3);
		$table->add_row(html_td('', '', $this->_getFileContent($this->getViewVariable('actual'))));
        //$table->set_class("titulo02");
      
		$arrElem = $this->getViewVariable('view_elem');
		//Debug::oneVar($arrElem, __FILE__, __LINE__);

		if ($arrElem[0]['name']!=null) { //Si no está vacío
			for ($i=0; $i<count($arrElem); $i++) {
				switch($arrElem[$i]['type']){
					case 4:
						$row = $this->formatCheckBox($arrElem[$i]['name'], '0', 
										$arrElem[$i]['label'],'ok');
						$table->add_row($row);

						break;
					case 5:
						$elem = html_td('titulo03', '', $this->element_form($arrElem[$i]['name']));
						$elem->set_tag_attribute('colspan', '3');
						$table->add_row($elem);
						break;
					case 6:
						$label = html_td('titulo03', '', $arrElem[$i]['label']);
						$label->set_tag_attribute('colspan', '3');
						$table->add_row($label);
						break;
					default;
						$table->add_row($this->_showElement($arrElem[$i]['name'], 
															'0', 
															$arrElem[$i]['variable'],
															$arrElem[$i]['label'],
															$arrElem[$i]['name'],
															'left'));
				}
			} //for
		}//if

        return $table;
    }
    
	function _getFileContent($filename)
    {
        $data = 'Fichero vacio o no existe';

        if(file_exists($filename) && is_file($filename)) {
            ob_start();
            include_once($filename);
            $data = ob_get_contents();
            ob_end_clean();
        }

        return $data;
    }
	
	function formatCheckBox($element, $tab_index, $text, $status = '')
    {
	    $this->set_form_tabindex($element, $tab_index);
		$row = html_tr();

		$check = html_td('titulo02', '', $this->element_form($element));

		switch($status){
			case 'ok':
				$img = Theme::getThemeImagePath('boton_green.gif');
				break;
			case 'ko':
				$img = Theme::getThemeImagePath('boton_red.gif');
				break;
			default:
				$img = Theme::getThemeImagePath('invisible.gif');
		}
		$image = html_td('titulo02', '', html_img($img));

		$label = html_td('titulo', '', agt($text));

		$row->add($check);
		$row->add($image);
		$row->add($label);
	
	    return $row;
    }
	
	function _addButton($name, $label, $class)
    {
    	$boton = $this->_formatElem("base_SubmitButton", $name, "submit", $label);
	   	$boton->set_attribute('class', $class); 
	   	
	   	return $boton;
    }
	
	function _coursePath($file)
	{
		return Util::main_URLPath($this->file_path.$file);
	}
}
?>
